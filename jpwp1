package sample;

import javafx.animation.AnimationTimer;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.beans.property.IntegerProperty;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.paint.ImagePattern;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Ellipse;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Popup;
import javafx.stage.Stage;
import javafx.util.Duration;


import java.io.InputStream;
import java.util.*;

public class Main extends Application {

    AnimationTimer animacja;
    double myszx, speed, falling1, falling2;
    int zlapano, sekundy=60;
    Rectangle kosz, pasek;
    List drop = new ArrayList();
    Pane polegry = new Pane();
    Timer timer = new Timer();
    TimerTask timertask = new TimerTask() {
        @Override
        public void run() {
            sekundy--;
        }
    };


    Label label = new Label("CATCH THE FRUIT");
    Label label1 = new Label("Czas: 0");
    Label label2 = new Label("Złapano: 0");
    Label label3 = new Label("KONIEC GRY");

    Button button1 = new Button("Nowa gra");
    Button button2 = new Button("Tabela wyników");
    Button button3 = new Button("Instrukcja");
    Button button4 = new Button("Wyjscie");
    Button button5 = new Button("Powrot do menu");


    public void start(Stage stage){

        kosz = rectangle();
        pasek = rectangle2();
        timer.scheduleAtFixedRate(timertask, 1000, 1000);

        VBox menu1 = new VBox(25);
        menu1.setAlignment(Pos.CENTER);
        menu1.getChildren().addAll(label, button1, button2, button3, button4);
        polegry.getChildren().addAll(kosz, pasek, button5, label1, label2);


        Scene menu = new Scene(menu1, 600, 400);
        Scene gra = new Scene(polegry, 400, 600);

        gra.setOnMouseMoved(e -> {
            myszx = e.getX();
        });

        button1.setOnAction(e -> {stage.setScene(gra); sekundy=60; zlapano=0;});
        button4.setOnAction(e -> stage.close());
        button5.setOnAction(e -> {stage.setScene(menu);});

        speed = 1;
        falling1 = 2000;
        falling2 = 5000;

        Timeline timeline = new Timeline(new KeyFrame(Duration.millis(falling1), event -> {
            drop.add(jablko());
            polegry.getChildren().add(((Node)drop.get(drop.size() -1)));
        }));

        Timeline timeline2 = new Timeline(new KeyFrame(Duration.millis(falling2), event -> {
            drop.add(piorko());
            polegry.getChildren().add(((Node)drop.get(drop.size() -1)));
        }));

        timeline.setCycleCount(1000);
        timeline.play();
        timeline2.setCycleCount(1000);
        timeline2.play();

        button5.setLayoutY(5);
        label1.setLayoutX(150);
        label1.setLayoutY(5);
        label1.setFont(Font.font (null,20));
        label2.setLayoutX(275);
        label2.setLayoutY(5);
        label2.setFont(Font.font (null,20));


        stage.setTitle("Catch The Fruit");
        stage.setScene(menu);
        stage.show();

        animacja = new AnimationTimer() {

            @Override
            public void handle(long arg0) {
                PrzebiegGry();
            }

        };
        animacja.start();

    }

    // zadyma w animacji

    public void PrzebiegGry() {

        kosz.setLayoutX(myszx);
        label1.setText("Czas: " + sekundy);

        for (int i = 0; i < drop.size(); i++) {

            // to chyba spada elementy
            ((Circle) drop.get(i)).setLayoutY(((Circle) drop.get(i)).getLayoutY() + speed + ((Circle) drop.get(i)).getLayoutY() / 150);

            // tu elementy znikają i się dodaje jak wpadnie do koszyczka
            if ((((Circle) drop.get(i)).getLayoutX() > kosz.getLayoutX() && ((Circle) drop.get(i)).getLayoutX() < kosz.getLayoutX() + 70) &&
                    ((Circle) drop.get(i)).getLayoutY() >= 550) {
                polegry.getChildren().remove((drop.get(i)));
                drop.remove(i);
                zlapano += 1;
                label2.setText("Złapano: " + zlapano);
            }

            else if (((Circle) drop.get(i)).getLayoutY() >= 590) {
                polegry.getChildren().remove((drop.get(i)));
                drop.remove(i);
            }
        }
    }

    // robienie kształtów

    public Rectangle rectangle() {
        Rectangle rectangle = new Rectangle();
        rectangle.setLayoutX(200);
        rectangle.setLayoutY(550);
        rectangle.setHeight(70);
        rectangle.setWidth(60);
        return rectangle;
    }

    public Rectangle rectangle2() {
        Rectangle rectangle2 = new Rectangle();
        rectangle2.setLayoutX(0);
        rectangle2.setLayoutY(0);
        rectangle2.setHeight(35);
        rectangle2.setWidth(400);
        rectangle2.setFill(Color.BROWN);
        return rectangle2;
    }

    public Circle jablko() {
        Circle jablko = new Circle();
        jablko.setLayoutX(rand(3, 397));
        jablko.setLayoutY(35);
        jablko.setRadius(10);
        jablko.setFill(Color.RED);
        return jablko;
    }

    public Circle jablkozgnil() {
        Circle jablkozgnil = new Circle();
        jablkozgnil.setLayoutX(rand(3, 397));
        jablkozgnil.setLayoutY(35);
        jablkozgnil.setRadius(10);
        return jablkozgnil;
    }


    public Ellipse piorko() {
        Ellipse piorko = new Ellipse();
        piorko.setLayoutX(rand(3, 397));
        piorko.setLayoutY(35);
        piorko.setRadiusX(10);
        piorko.setRadiusY(10);
        piorko.setFill(Color.WHITE);
        return piorko;
    }

    public Circle kowadlo() {
        Circle kowadlo = new Circle();
        kowadlo.setLayoutX(rand(3, 397));
        kowadlo.setLayoutY(35);
        kowadlo.setRadius(10);
        return kowadlo;
    }


    public int rand(int min, int max) {
        return (int)(Math.random() * max + min);
    }

    public static void main(String[] args) {
        launch(args);
    }
}
